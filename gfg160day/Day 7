Day 7. Stock Buy and Sell – Multiple Transaction Allowed 🧠
The problem can be found at the following link: Problem Link

💡 Problem Description:
You are given an array prices[] where each number represents the price of a stock on the corresponding day. You may buy and sell the stock multiple times. Find the maximum profit that you can achieve by performing multiple transactions (buying and selling the stock).

Note: A stock can only be sold if it has been bought previously and multiple stocks cannot be held on any given day.

🔍 Example Walkthrough:
Input:
prices[] = [100, 180, 260, 310, 40, 535, 695]
Output:
865

Explanation:
Buy the stock on day 0 and sell it on day 3 => 310 – 100 = 210.
Buy the stock on day 4 and sell it on day 6 => 695 – 40 = 655.
Maximum Profit = 210 + 655 = 865.

Input:
prices[] = [4, 2, 2, 2, 4]
Output:
2

Explanation:
Buy the stock on day 3 and sell it on day 4 => 4 – 2 = 2.
Maximum Profit = 2.

Solution

from typing import List

class Solution:
    def maximumProfit(self, prices: List[int]) -> int:
        profit = 0
        for i in range(1, len(prices)):
            if prices[i] > prices[i - 1]:
                profit += prices[i] - prices[i - 1]
        return profit
